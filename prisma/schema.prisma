generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id       Int        @id @default(autoincrement())
  role     String     @unique
  UserRole UserRole[]

  @@unique([id, role])
}

model User {
  id           String            @id @default(cuid())
  email        String            @unique
  password     String
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  transactions UserTransaction[]
  roles        UserRole[]        // Changed to array to represent multiple roles assigned to the user
}

model UserTransaction {
  recordId                  Int                            @id @default(autoincrement())
  userId                    String
  categoryId                Int
  categoryName              String
  amount                    Int
  transactionTime           DateTime
  createdAt                 DateTime                       @default(now())
  user                      User                           @relation(fields: [userId], references: [id])
  incomeTransactionRecords  UserIncomeTransactionRecord[]
  expenseTransactionRecords UserExpenseTransactionRecord[]
  Category                  Category?                      @relation(fields: [categoryId, categoryName], references: [id, name])

  @@unique([recordId, userId, categoryId])
}

model UserIncomeTransactionRecord {
  recordId        Int
  userId          String
  categoryId      Int
  categoryName    String
  amount          Int
  transactionTime DateTime
  transaction     UserTransaction @relation(fields: [recordId, userId, categoryId], references: [recordId, userId, categoryId])
  Category        Category?       @relation(fields: [categoryId, categoryName], references: [id, name])

  @@unique([recordId, userId, categoryId])
}

model UserExpenseTransactionRecord {
  recordId        Int
  userId          String
  categoryId      Int
  categoryName    String
  amount          Int
  transactionTime DateTime
  transaction     UserTransaction @relation(fields: [recordId, userId, categoryId], references: [recordId, userId, categoryId])
  Category        Category?       @relation(fields: [categoryId, categoryName], references: [id, name])

  @@unique([recordId, userId, categoryId])
}

model UserRole {
  userId String
  roleId Int
  user   User   @relation(fields: [userId], references: [id])
  role   Role   @relation(fields: [roleId], references: [id])

  @@id([userId, roleId])
}

model Category {
  id                        Int                            @id @default(autoincrement())
  name                      String?                        @unique
  transaction               UserTransaction[]
  incomeTransactionRecords  UserIncomeTransactionRecord[]
  expenseTransactionRecords UserExpenseTransactionRecord[]

  @@unique([id, name])
}
