// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model SupportRole {
  id    Int               @id @default(autoincrement())
  name  String            @unique
  users UserSupportRole[]
}

model User {
  id           Int               @id @default(autoincrement())
  email        String            @unique
  password     String // Add the password field
  createdAt    DateTime          @default(now()) // Add the createdAt field
  updatedAt    DateTime          @updatedAt // Add the updatedAt field
  transactions UserTransaction[]
  roles        UserSupportRole? // Add this field to represent the roles assigned to the user
}

model UserTransaction {
  recordId                  Int                            @default(autoincrement())
  userId                    Int
  categoryId                Int
  categoryName              String
  amount                    Int
  transactionTime           DateTime
  createdAt                 DateTime                       @default(now())
  user                      User                           @relation(fields: [userId], references: [id])
  incomeTransactionRecords  UserIncomeTransactionRecord[]
  expenseTransactionRecords UserExpenseTransactionRecord[]
  Category                  Category?                      @relation(fields: [categoryId, categoryName], references: [id, name])

  @@id([recordId, userId, categoryId]) // Composite PK
}

model UserIncomeTransactionRecord {
  recordId        Int
  userId          Int
  categoryId      Int
  categoryName    String
  amount          Int
  transactionTime DateTime
  transaction     UserTransaction @relation(fields: [recordId, userId, categoryId], references: [recordId, userId, categoryId])
  Category        Category?       @relation(fields: [categoryId, categoryName], references: [id, name])

  @@id([recordId, userId, categoryId])
}

model UserExpenseTransactionRecord {
  recordId        Int
  userId          Int
  categoryId      Int
  categoryName    String
  amount          Int
  transactionTime DateTime
  transaction     UserTransaction @relation(fields: [recordId, userId, categoryId], references: [recordId, userId, categoryId])
  Category        Category?       @relation(fields: [categoryId, categoryName], references: [id, name])

  @@id([recordId, userId, categoryId])
}

model UserSupportRole {
  userId Int @unique
  roleId Int
  user   User        @relation(fields: [userId], references: [id])
  role   SupportRole @relation(fields: [roleId], references: [id])

  @@id([userId, roleId])
}

model Category {
  id                        Int                            @id @default(autoincrement())
  name                      String?
  transaction               UserTransaction[]
  incomeTransactionRecords  UserIncomeTransactionRecord[]
  expenseTransactionRecords UserExpenseTransactionRecord[]

  @@unique([id, name])
}
